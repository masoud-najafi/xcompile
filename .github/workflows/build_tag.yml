name: Build C with tag v*

on:
  push:
    tags: v*

jobs:
  build:
    strategy:
      matrix:
        os: [windows-2019, windows-2022, ubuntu-22.04, macos-12]
        include:
          - os: windows-2019
            arch: x64
            suffix: win64.exe
            compiler: cl
          - os: windows-2022
            arch: x86
            suffix: win32.exe
            compiler: cl
          - os: ubuntu-22.04
            arch: x64
            suffix: linux64
            compiler: gcc
          - os: macos-12
            arch: x64
            suffix: macos64
            compiler: clang

    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup environment
      shell: bash
      run: |
        mkdir build
        echo "PROJECT_NAME=hello_world" >> $GITHUB_ENV
        echo "EXECUTABLE_NAME=${PROJECT_NAME}_${{ matrix.suffix}}" >> $GITHUB_ENV

    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-22.04'
      run: sudo apt-get update && sudo apt-get install -y gcc-multilib

    - name: Install dependencies (macOS)
      if: matrix.os == 'macos-12'
      run: brew install gcc

    - name: Compile Windows (x64)
      if: matrix.os == 'windows-2019'
      shell: cmd
      run: |
        cl ./main.c /Fe:build/${EXECUTABLE_NAME} /W4 /O2 /MT

    - name: Compile Windows (x86)
      if: matrix.os == 'windows-2022'
      shell: cmd
      run: |
        set PLATFORM=x86
        cl ./main.c /Fe:build/${EXECUTABLE_NAME} /W4 /O2 /MT

    - name: Compile Linux
      if: matrix.os == 'ubuntu-22.04'
      run: |
        gcc ./main.c -o build/${EXECUTABLE_NAME} -Wall -O3 -static

    - name: Compile macOS
      if: matrix.os == 'macos-12'
      run: |
        clang ./main.c -o build/${EXECUTABLE_NAME} -Wall -O3

    - name: Package artifacts
      run: |
        cd build
        zip ${EXECUTABLE_NAME}.zip ${EXECUTABLE_NAME}
        echo "ASSET_PATH=build/${EXECUTABLE_NAME}.zip" >> $GITHUB_ENV

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ env.EXECUTABLE_NAME }}
        path: ${{ env.ASSET_PATH }}

    - name: Create release
      if: success() && github.ref_type == 'tag'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ${{ env.ASSET_PATH }}
        tag_name: ${{ github.ref }}
        body: "Build pour ${{ matrix.os }} (${{ matrix.arch }})"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}